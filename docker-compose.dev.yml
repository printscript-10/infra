services:
  proxy:
    image: nginx
    container_name: "reverse-proxy"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      -  ./conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./cerbot/www:/var/www/certbot
    depends_on:
      - snippet-runner
      - snippet-permissions
      - permissions-db
      - snippet-manager
      - manager-db
      - printscript-ui
      - api
      - azurite
      - redis
      - duckdns
    
  certbot:
    container_name: "certbot"
    image: certbot/certbot:v2.11.0
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot/ --force-renewal --email manuel.hernandez@ing.austral.edu.ar -d printscript-10-dev.duckdns.org --agree-tos

  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    container_name: "duckdns"
    env_file:
      - .env
    environment:
      - SUBDOMAINS=printscript-10-dev
      - TOKEN=${DUCKDNS_TOKEN}

  printscript-ui:
    container_name: "printscript-ui"
    image: ghcr.io/printscript-10/printscript-ui-dev:latest
    expose:
      - "80"

  snippet-manager:
    container_name: "snippet-manager"
    image: ghcr.io/printscript-10/snippet-manager-dev:latest
    ports:
      - "8081:8081"
    env_file:
      - .env
    environment:
      DATABASE_URL: ${MANAGER_DATABASE_URL}
      DATABASE_USERNAME: ${MANAGER_DATABASE_USERNAME}
      DATABASE_PASSWORD: ${MANAGER_DATABASE_PASSWORD}

  snippet-permissions:
    container_name: "snippet-permissions"
    image: ghcr.io/printscript-10/snippet-permission-dev:latest
    ports:
      - "8083:8083"
    env_file:
      - .env
    environment:
      DATABASE_URL: ${PERMISSION_DATABASE_URL}
      DATABASE_USERNAME: ${PERMISSION_DATABASE_USERNAME}
      DATABASE_PASSWORD: ${PERMISSION_DATABASE_PASSWORD}

  snippet-runner:
    container_name: "snippet-runner"
    image: ghcr.io/printscript-10/snippet-runner-dev:latest
    ports:
      - "8082:8082"
    env_file:
      - .env

  manager-db:
    container_name: "snippet-manager-db"
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${MANAGER_DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${MANAGER_DATABASE_PASSWORD}
      POSTGRES_DB: ${MANAGER_DATABASE_NAME}
    ports:
      - "${MANAGER_DATABASE_PORT}:5432"
    env_file:
      - .env
    volumes:
      - snippet_manager_data:/var/lib/postgresql/data

  permissions-db:
    container_name: "snippet-permission-db"
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${PERMISSION_DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${PERMISSION_DATABASE_PASSWORD}
      POSTGRES_DB: ${PERMISSION_DATABASE_NAME}
    ports:
      - "${PERMISSION_DATABASE_PORT}:5432"
    env_file:
      - .env
    volumes:
      - snippet_permission_data:/var/lib/postgresql/data

  api:
    container_name: "asset_service"
    image: ghcr.io/austral-ingsis/snippet-asset-service:latest
    ports:
      - "8080:8080"
    environment:
      AZURE_HOST: "http://azurite"
      NEW_RELIC_APP_NAME: "asset-service"
      NEW_RELIC_AGENT_ENABLED: "true"

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: "azurite"
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - blob:/workspace

  redis:
    container_name: "snippets-redis"
    image: redis:6-alpine
    ports:
      - "6379:6379"

volumes:
  snippet_manager_data:
  snippet_permission_data:
  blob:
    external: false